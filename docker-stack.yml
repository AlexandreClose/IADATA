version: '3.7'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - esdata:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "ES_JAVA_OPTS= -Xmx256m -Xms256m"
      - "ELASTIC_PASSWORD=changeme"
      - node.name=elasticsearch
      - network.host=_eth0_
      
         # Xpack TLS declaration linked with cert volume where pem are stored     
      - xpack.security.http.ssl.key=$CERTS_DIR/elasticsearch/elasticsearch.key
      - xpack.security.http.ssl.certificate=$CERTS_DIR/elasticsearch/elasticsearch.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/elasticsearch/elasticsearch.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/elasticsearch/elasticsearch.key
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
            
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - esdata1:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
    ports:
      - 9201:9200
    environment:
      - "ES_JAVA_OPTS=-Xmx256m -Xms256m"
      - "ELASTIC_PASSWORD=changeme"
      - node.name=elasticsearch1  
      - network.host=_eth0_ 
      
        # Xpack TLS declaration linked with cert volume where pem are stored      
      - xpack.security.http.ssl.key=$CERTS_DIR/elasticsearch1/elasticsearch1.key
      - xpack.security.http.ssl.certificate=$CERTS_DIR/elasticsearch1/elasticsearch1.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/elasticsearch1/elasticsearch1.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/elasticsearch1/elasticsearch1.key
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
            
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - esdata2:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
    ports:
      - 9202:9200
    environment:
      - "ES_JAVA_OPTS=-Xmx256m -Xms256m"
      - "ELASTIC_PASSWORD=changeme"
      - node.name=elasticsearch2
      - network.host=_eth0_
      
        # Xpack TLS declaration linked with cert volume where pem are stored
      - xpack.security.http.ssl.key=$CERTS_DIR/elasticsearch2/elasticsearch2.key
      - xpack.security.http.ssl.certificate=$CERTS_DIR/elasticsearch2/elasticsearch2.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/elasticsearch2/elasticsearch2.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/elasticsearch2/elasticsearch2.key   
    networks:
      - elk       
    deploy:
      mode: replicated
      replicas: 1
            
  logstash:
    image: docker.elastic.co/logstash/logstash:$ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - certs:$CERTS_DIR      
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
    deploy:
      mode: replicated
      replicas: 1

  kibana:
    image: docker.elastic.co/kibana/kibana:$ELK_VERSION
    volumes: ['./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro', 'certs:$CERTS_DIR'] 
    ports:
      - "5601:5601"
    environment:
        ELASTICSEARCH_USERNAME: $ELASTIC_USERNAME
        ELASTICSEARCH_PASSWORD: $ELASTIC_PASSWORD
        
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1      
    depends_on:
      - elasticsearch

volumes: {"esdata", "esdata1","esdata2","certs","logs"}
      
networks:
  elk:
#    driver: overlay
